{"version":3,"sources":["components/Books.js","components/BkShelf.js","BooksAPI.js","components/MainPage.js","components/SearchPage.js","App.js","index.js"],"names":["Books","_this","this","react_default","a","createElement","className","style","width","height","backgroundImage","concat","props","book","imageLinks","thumbnail","value","shelf","onChange","event","updateBook","target","disabled","title","authors","React","Component","BkShelf","console","log","name","books","map","key","components_Books","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","MainPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","BooksAPI","resp","setState","state","filter","b","_this2","components_BkShelf","Link","to","SearchPage","updateQuery","query","submitSearch","results","_this3","undefined","trim","error","forEach","find","B","_this4","type","placeholder","BooksApp","Route","exact","path","component","ReactDOM","render","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.48426361.chunk.js","sourcesContent":["import React from 'react'\n\nclass Books extends React.Component {\n  render() {\n    return (\n         <li>\n         \t<div className=\"book\">\n            \t<div className=\"book-top\">\n                   <div className=\"book-cover\" style={{ width: \t\t\t\t\t\t\t\t\t128, height: 192, backgroundImage: \t\t\t\t\t\t`url(\"${this.props.book.imageLinks && this.props.book.imageLinks.thumbnail || \"\"}\")` }}></div>\n                     <div className=\"book-shelf-changer\">\n                     \t<select value={this.props.book.shelf || \"none\"} \tonChange={(event) => {this.props.updateBook(this.props.book, event.target.value)}}\n>\n                        \t<option value=\"move\" disabled>Move to...</option>\n                            <option value=\"currentlyReading\">Currently Reading</option>\n                            <option value=\"wantToRead\">Want to Read</option>\n                            <option value=\"read\">Read</option>\n                            <option value=\"none\">None</option>\n                         </select>\n                      </div>\n                   </div>\n                   <div className=\"book-title\">{this.props.book.title}</div>\n                   <div className=\"book-authors\">{this.props.book.authors && this.props.book.authors[0] || \"No Author...\"}</div>\n                   </div>\n\t\t\t\t</li>\n      );\n }\n}\n\n\nexport default Books;","import React from 'react'\nimport Books from './Books'\n//adding componentDidMount to check\n//then below gonna render some bk components vs list of books\nclass BkShelf extends React.Component {\n componentDidMount() {\n   console.log(this);\n }\n  \n  render() {\n    return (\n        <div className=\"bookshelf\">\n        \t<h2 className=\"bookshelf-title\">{this.props.name}</h2>\n            <div className=\"bookshelf-books\">\n            \t<ol className=\"books-grid\">\n\t\t\t\t\t{\n                      this.props.books.map((book, key) => <Books updateBook={this.props.updateBook} book={ book } key={key}/> ) \n                    } \n                </ol>\n               </div>\n              </div>\n              \n      );\n }\n}\n\n\nexport default BkShelf;","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BkShelf from './BkShelf'\nimport * as BooksAPI from '.././BooksAPI'\n//going to use componentDidmount and want to load all books\n//then use a constructor method to have some starting books state\nclass MainPage extends React.Component {\n  constructor(props) {\n   super(props);\n   this.state = {\n     books: []\n   }\n  }\n  \n  componentDidMount() {\n    BooksAPI.getAll()\n    .then(resp => {\n      console.log(resp);\n      this.setState({ books: resp });\n    });\n  }\n  \n    updateBook = (book, shelf) => {\n \tBooksAPI.update(book, shelf)\n \t.then(resp => {\n \t\tbook.shelf = shelf\n      \tthis.setState(state => ({\n          books: state.books.filter(b => b.id !== book.id).concat([book])\n        }))\n \t})\n }\n render() {\n    return (\n\t\t<div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n              \t<BkShelf updateBook={this.updateBook} name=\"Currently Reading\" books={this.state.books.filter(b => b.shelf === \"currentlyReading\")} />\n<BkShelf updateBook={this.updateBook} name=\"Want to Read\" books={this.state.books.filter(b => b.shelf === \"wantToRead\")} />\n<BkShelf updateBook={this.updateBook} name=\"Read\" books={this.state.books.filter(b => b.shelf === \"read\")} />\n\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to=\"/search\">Add a book</Link>\n            </div>\n\t\t</div>\n      );\n }\n}\n\n\nexport default MainPage;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '.././BooksAPI'\nimport Book from './Books'\n\nclass SearchPage extends React.Component {\nconstructor(props) {\n   super(props);\n   this.state = {\n     books: [],\n     results: [],\n     query: \"\"\n   }\n  }\n  \n  componentDidMount() {\n    BooksAPI.getAll()\n    .then(resp => {\n      console.log(resp);\n      this.setState({ books: resp });\n    });\n  }  \n  \n  updateQuery = (query) => {\n\tthis.setState({query: query}, this.submitSearch)\n\t}\n\n\tsubmitSearch() {\n\tif(this.state.query === '' || this.state.query === undefined) {\n\t\treturn this.setState({ results: [] })\n\t}\n\tBooksAPI.search(this.state.query.trim()).then(res => {\n\t console.log(res);\n\t if(res.error) {\n\t \treturn this.setState({ results: [] })\n\t }\n\t else {\n       res.forEach(b => {\n\t\tlet find = this.state.books.filter(B => B.id === b.id)\n\t\t\tif(find[0]) {\n\t\t\t\tconsole.log('match')\n\t\t\t\tb.shelf = find[0].shelf\n              }\n\t\t\t})\n\t \treturn this.setState({ results: res })\n\t \t}\n\t})\n}\n    \nupdateBook = (book, shelf) => {\n \tBooksAPI.update(book, shelf)\n \t.then(resp => {\n \t\tbook.shelf = shelf\n      \tthis.setState(state => ({\n          books: state.books.filter(b => b.id !== book.id).concat([book])\n        }))\n \t})\n }\n\n render() {\n    return (\n        <div className=\"search-books\">\n           <div className=\"search-books-bar\">\n              <Link className=\"close-search\" to=\"/\">Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                <input type=\"text\" placeholder=\"Search by title or author\" \tvalue={this.state.query} \t\t\t\t\tonChange={(event) => this.updateQuery(event.target.value)} />\n\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n\t\t\t\t{\n        \t\tthis.state.results.map((book, key) => <Book updateBook={this.updateBook} book={ book } \t\t\t\t\tkey={key}/> ) \n              \t}\n\t\t\t  </ol>\n            </div>\n          </div>\n      );\n }\n}\n\n\nexport default SearchPage;","import React from 'react'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport MainPage from './components/MainPage';\n//helpFrom https://reacttraining.com/react-router/web/api/Route/component\nimport SearchPage from './components/SearchPage';\n\n\nclass BooksApp extends React.Component {\n  render() {\n    /*adding in here for 2 pages*/\n    /*changing route adding search route*/\n    return (\n\t\t<div>\n\t\t  <Route exact path=\"/\" component={ MainPage } />\n\t\t  <Route exact path=\"/search\" component={ SearchPage } />\n        </div>  \n      );    \n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <BrowserRouter>\n   <App /> \n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}